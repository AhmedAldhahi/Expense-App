const BACKEND_URL = 'https://react-native-practice-81ad9-default-rtdb.europe-west1.firebasedatabase.app';

export async function storeExpense(expenseData){
     //const response = await axios.post(BACKEND_URL + '/expenses.json',
    const response = await fetch(BACKEND_URL + '/expenses.json',{
        method: "POST",
        body: JSON.stringify(expenseData),
    }).then((expenseData)=>{
        console.log(JSON.stringify(expenseData.status));}).catch(error => "Oops, your POST method no work");
        //second argument is the value that should sent to the database, in this case it will be an expenseData which is an
        //object of amount decription and date no need for id because a uniqe id will be auto generated by FIREBASE

        //you can add any segments here(expenses) will transform into nodes or folders in the database
        //so this will create an expense node and under it we will find the newlly added expense
        //json is firebase specific
        //post request is for creating new data

    const id = response.data.name;
    //the id generated by firebase is called name
    return id;

}

export async function fetchExpenses(){
    //const response = await axios.get(BACKEND_URL + '/expenses.json');
    //modern way to do it is to turn the functionn to async and wait for the data
    const response = await fetch(BACKEND_URL + '/expenses.json',{
        method: "GET"
    }).catch(
        error => "Oops, your FETCH method no work");
    const data = await response.json();


    const expenses = [];
    //console.log(data);


    //the key is the firebase id
    for(const key in data){
        const expenseObj = {
            id: key,
            amount: data[key].amount,
            date: new Date(data[key].date),
            description: data[key].description,
        }
        expenses.push(expenseObj);
    }
    return expenses;
}